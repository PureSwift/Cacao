//
//  TestStyleKit.swift
//  Cacao
//
//  Created by Alsey Coleman Miller on 6/1/16.
//  Copyright (c) 2016 PureSwift. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#if os(Linux)
    import Glibc
#endif

import Cacao
import Silica

@inline(__always)
public func NSString(string: String) -> String {
    
    return string
}

public class TestStyleKit {

    //// Cache

    private struct Cache {
        static let wirelessBlue: UIColor = UIColor(red: 0.278, green: 0.506, blue: 0.976, alpha: 1.000)
    }

    //// Colors

    public class var wirelessBlue: UIColor { return Cache.wirelessBlue }

    //// Drawing Methods

    public class func drawSimpleShapes(frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let red = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)
        let green = UIColor(red: 0.320, green: 0.800, blue: 0.350, alpha: 1.000)

        //// Background Rectangle Drawing
        let backgroundRectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        backgroundRectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 0.20833 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 0.41667 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        red.setFill()
        rectangle2Path.fill()


        //// Polygon Drawing
        let polygonPath = UIBezierPath()
        polygonPath.moveToPoint(CGPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.00000 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.59907 * frame.width, y: frame.minY + 0.14395 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.56123 * frame.width, y: frame.minY + 0.37688 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.43877 * frame.width, y: frame.minY + 0.37688 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.40093 * frame.width, y: frame.minY + 0.14395 * frame.height))
        polygonPath.closePath()
        green.setFill()
        polygonPath.fill()


        //// Star Drawing
        let starPath = UIBezierPath()
        starPath.moveToPoint(CGPoint(x: frame.minX + 0.90000 * frame.width, y: frame.minY + 0.00000 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.93674 * frame.width, y: frame.minY + 0.10721 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.99907 * frame.width, y: frame.minY + 0.14395 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.95944 * frame.width, y: frame.minY + 0.24696 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.96123 * frame.width, y: frame.minY + 0.37688 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.90000 * frame.width, y: frame.minY + 0.33333 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.83877 * frame.width, y: frame.minY + 0.37688 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.84056 * frame.width, y: frame.minY + 0.24696 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.80093 * frame.width, y: frame.minY + 0.14395 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.86326 * frame.width, y: frame.minY + 0.10721 * frame.height))
        starPath.closePath()
        blue.setFill()
        starPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPoint(x: frame.minX + 0.20833 * frame.width, y: frame.minY + 0.60000 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.20833 * frame.width, y: frame.minY + 1.00000 * frame.height))
        blue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPoint(x: frame.minX + 0.49583 * frame.width, y: frame.minY + 0.62500 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.42917 * frame.width, y: frame.minY + 0.68333 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.74167 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.81667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.91667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.42917 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.49583 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.57083 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.60417 * frame.width, y: frame.minY + 0.81667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.60417 * frame.width, y: frame.minY + 0.68333 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.57083 * frame.width, y: frame.minY + 0.62500 * frame.height))
        red.setFill()
        bezier2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + floor(frame.width * 0.79167 + 0.5), y: frame.minY + floor(frame.height * 0.58333 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.79167 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.58333 + 0.5)))
        green.setFill()
        ovalPath.fill()
    }

    public class func drawAdvancedShapes(frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let black = UIColor(red: 0.064, green: 0.064, blue: 0.064, alpha: 1.000)


        //// Subframes
        let group2: CGRect = CGRect(x: frame.minX + floor(frame.width * 0.74167 + 0.5), y: frame.minY + floor(frame.height * 0.52500 - 0) + 0.5, width: floor(frame.width * 0.95000 - 0.5) - floor(frame.width * 0.74167 + 0.5) + 1, height: floor(frame.height * 0.94581 + 0.5) - floor(frame.height * 0.52500 - 0) - 0.5)
        let group3: CGRect = CGRect(x: frame.minX + floor((frame.width - 45.13) * 0.49777 + 0.5), y: frame.minY + floor((frame.height - 61.18) * 0.49303 - 0.32) + 0.82, width: 45.13, height: 61.18)


        //// Group 2
        CGContextSaveGState(context)
        CGContextBeginTransparencyLayer(context, nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.moveToPoint(CGPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.44959 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.37437 * group2.width, y: group2.minY + 0.86378 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.43378 * group2.width, y: group2.minY + 1.00000 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.42826 * group2.width, y: group2.minY + 1.00003 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.33274 * group2.width, y: group2.minY + 0.84651 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.20142 * group2.width, y: group2.minY + 0.89902 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.21934 * group2.width, y: group2.minY + 0.89902 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.20591 * group2.width, y: group2.minY + 0.89902 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.19274 * group2.width, y: group2.minY + 0.89902 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.18534 * group2.width, y: group2.minY + 0.89253 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.11083 * group2.width, y: group2.minY + 0.81813 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.15388 * group2.width, y: group2.minY + 0.66811 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.09950 * group2.width, y: group2.minY + 0.80659 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.09557 * group2.width, y: group2.minY + 0.80258 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.13691 * group2.width, y: group2.minY + 0.62713 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.55476 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.57706 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.57126 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.44959 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.13645 * group2.width, y: group2.minY + 0.37406 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.43311 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.42791 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.15343 * group2.width, y: group2.minY + 0.33300 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.10816 * group2.width, y: group2.minY + 0.18477 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.09175 * group2.width, y: group2.minY + 0.20057 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.09599 * group2.width, y: group2.minY + 0.19646 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.18829 * group2.width, y: group2.minY + 0.10460 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.19824 * group2.width, y: group2.minY + 0.10428 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.33176 * group2.width, y: group2.minY + 0.15396 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.21034 * group2.width, y: group2.minY + 0.10428 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.25522 * group2.width, y: group2.minY + 0.12099 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.37326 * group2.width, y: group2.minY + 0.13677 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.44512 * group2.width, y: group2.minY + 0.00000 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.42323 * group2.width, y: group2.minY + -0.00002 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.42936 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.55024 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.62541 * group2.width, y: group2.minY + 0.13631 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.56598 * group2.width, y: group2.minY + 0.00000 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.57152 * group2.width, y: group2.minY + 0.00002 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.66710 * group2.width, y: group2.minY + 0.15345 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.79846 * group2.width, y: group2.minY + 0.10102 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.78034 * group2.width, y: group2.minY + 0.10102 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.79394 * group2.width, y: group2.minY + 0.10102 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.80709 * group2.width, y: group2.minY + 0.10102 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.81449 * group2.width, y: group2.minY + 0.10739 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.88900 * group2.width, y: group2.minY + 0.18167 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.84590 * group2.width, y: group2.minY + 0.33186 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.90033 * group2.width, y: group2.minY + 0.19334 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.90421 * group2.width, y: group2.minY + 0.19733 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.86292 * group2.width, y: group2.minY + 0.37307 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.44524 * group2.height), controlPoint1: CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.42292 * group2.height), controlPoint2: CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.42871 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.55029 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.86337 * group2.width, y: group2.minY + 0.62592 * group2.height), controlPoint1: CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.56638 * group2.height), controlPoint2: CGPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.57204 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.84651 * group2.width, y: group2.minY + 0.66702 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.89233 * group2.width, y: group2.minY + 0.81482 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.90787 * group2.width, y: group2.minY + 0.79887 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.90382 * group2.width, y: group2.minY + 0.80300 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.81159 * group2.width, y: group2.minY + 0.89549 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.80158 * group2.width, y: group2.minY + 0.89577 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.66832 * group2.width, y: group2.minY + 0.84603 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.78954 * group2.width, y: group2.minY + 0.89577 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.74476 * group2.width, y: group2.minY + 0.87904 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.62658 * group2.width, y: group2.minY + 0.86324 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 1.00000 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.57648 * group2.width, y: group2.minY + 1.00000 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.57079 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.closePath()
        clipPath.moveToPoint(CGPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.95658 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.54343 * group2.width, y: group2.minY + 0.95658 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.58997 * group2.width, y: group2.minY + 0.83912 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.55294 * group2.width, y: group2.minY + 0.93679 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.57351 * group2.width, y: group2.minY + 0.88432 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.59329 * group2.width, y: group2.minY + 0.83012 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.66878 * group2.width, y: group2.minY + 0.79902 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.67690 * group2.width, y: group2.minY + 0.80253 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.79579 * group2.width, y: group2.minY + 0.85047 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.72189 * group2.width, y: group2.minY + 0.82211 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.77507 * group2.width, y: group2.minY + 0.84380 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.85405 * group2.width, y: group2.minY + 0.79232 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.80398 * group2.width, y: group2.minY + 0.67696 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.84665 * group2.width, y: group2.minY + 0.77139 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.82422 * group2.width, y: group2.minY + 0.72017 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.79990 * group2.width, y: group2.minY + 0.66818 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.83113 * group2.width, y: group2.minY + 0.59209 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.83964 * group2.width, y: group2.minY + 0.58874 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.95741 * group2.width, y: group2.minY + 0.53880 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.88508 * group2.width, y: group2.minY + 0.57089 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.93774 * group2.width, y: group2.minY + 0.54885 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.95741 * group2.width, y: group2.minY + 0.45711 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.83987 * group2.width, y: group2.minY + 0.41084 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.93751 * group2.width, y: group2.minY + 0.44756 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.88506 * group2.width, y: group2.minY + 0.42719 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.83102 * group2.width, y: group2.minY + 0.40761 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.79958 * group2.width, y: group2.minY + 0.33145 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.80333 * group2.width, y: group2.minY + 0.32286 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.85108 * group2.width, y: group2.minY + 0.20461 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.82267 * group2.width, y: group2.minY + 0.27832 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.84418 * group2.width, y: group2.minY + 0.22578 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.79266 * group2.width, y: group2.minY + 0.14634 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.67648 * group2.width, y: group2.minY + 0.19688 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.77381 * group2.width, y: group2.minY + 0.15305 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.72101 * group2.width, y: group2.minY + 0.17614 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.66818 * group2.width, y: group2.minY + 0.20076 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.59269 * group2.width, y: group2.minY + 0.16971 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.58932 * group2.width, y: group2.minY + 0.16114 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.53930 * group2.width, y: group2.minY + 0.04348 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.57148 * group2.width, y: group2.minY + 0.11569 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.54930 * group2.width, y: group2.minY + 0.06299 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.45645 * group2.width, y: group2.minY + 0.04348 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.40996 * group2.width, y: group2.minY + 0.16089 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.44689 * group2.width, y: group2.minY + 0.06322 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.42639 * group2.width, y: group2.minY + 0.11571 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.40670 * group2.width, y: group2.minY + 0.16984 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.33142 * group2.width, y: group2.minY + 0.20105 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.32330 * group2.width, y: group2.minY + 0.19751 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.20413 * group2.width, y: group2.minY + 0.14964 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.27821 * group2.width, y: group2.minY + 0.17796 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.22492 * group2.width, y: group2.minY + 0.15630 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.14597 * group2.width, y: group2.minY + 0.20782 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.19594 * group2.width, y: group2.minY + 0.32311 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.15327 * group2.width, y: group2.minY + 0.22872 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.17577 * group2.width, y: group2.minY + 0.27991 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.20008 * group2.width, y: group2.minY + 0.33191 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.16868 * group2.width, y: group2.minY + 0.40797 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.16024 * group2.width, y: group2.minY + 0.41130 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.04262 * group2.width, y: group2.minY + 0.46117 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.11486 * group2.width, y: group2.minY + 0.42913 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.06230 * group2.width, y: group2.minY + 0.45116 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.04262 * group2.width, y: group2.minY + 0.54296 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.16008 * group2.width, y: group2.minY + 0.58939 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.06252 * group2.width, y: group2.minY + 0.55255 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.11491 * group2.width, y: group2.minY + 0.57297 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.16886 * group2.width, y: group2.minY + 0.59265 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.20031 * group2.width, y: group2.minY + 0.66856 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.19655 * group2.width, y: group2.minY + 0.67713 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.14881 * group2.width, y: group2.minY + 0.79523 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.17721 * group2.width, y: group2.minY + 0.72164 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.15572 * group2.width, y: group2.minY + 0.77411 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.20734 * group2.width, y: group2.minY + 0.85369 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.32346 * group2.width, y: group2.minY + 0.80307 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.22615 * group2.width, y: group2.minY + 0.84692 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.27887 * group2.width, y: group2.minY + 0.82383 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.33181 * group2.width, y: group2.minY + 0.79917 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.40714 * group2.width, y: group2.minY + 0.83041 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.41051 * group2.width, y: group2.minY + 0.83898 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.95658 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.42841 * group2.width, y: group2.minY + 0.88445 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.45052 * group2.width, y: group2.minY + 0.93706 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.95658 * group2.height))
        clipPath.closePath()
        clipPath.moveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.67502 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.49999 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.40361 * group2.width, y: group2.minY + 0.67502 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.59650 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.32508 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.40355 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.40359 * group2.width, y: group2.minY + 0.32508 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.49999 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.59633 * group2.width, y: group2.minY + 0.32508 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.40357 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.67502 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.59650 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.59633 * group2.width, y: group2.minY + 0.67502 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.67502 * group2.height))
        clipPath.closePath()
        clipPath.moveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.36854 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.49999 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.42704 * group2.width, y: group2.minY + 0.36854 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.42752 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.63155 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.57252 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.42702 * group2.width, y: group2.minY + 0.63155 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.63209 * group2.width, y: group2.minY + 0.49999 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.57283 * group2.width, y: group2.minY + 0.63155 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.63209 * group2.width, y: group2.minY + 0.57252 * group2.height))
        clipPath.addCurveToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.36854 * group2.height), controlPoint1: CGPoint(x: group2.minX + 0.63207 * group2.width, y: group2.minY + 0.42752 * group2.height), controlPoint2: CGPoint(x: group2.minX + 0.57283 * group2.width, y: group2.minY + 0.36854 * group2.height))
        clipPath.addLineToPoint(CGPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.36854 * group2.height))
        clipPath.closePath()
        clipPath.usesEvenOddFillRule = true;

        clipPath.addClip()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: group2.minX + floor(group2.width * -0.20000 + 0.5), y: group2.minY + floor(group2.height * -0.19817 + 0.5) + 0, width: floor(group2.width * 1.20002 + 0.5) - floor(group2.width * -0.20000 + 0.5), height: floor(group2.height * 1.19795 - 0) - floor(group2.height * -0.19817 + 0.5) + 0.5))
        black.setFill()
        rectangle2Path.fill()


        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPoint(x: frame.minX + 0.16901 * frame.width, y: frame.minY + 0.61657 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.64531 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.19766 * frame.width, y: frame.minY + 0.61657 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.60350 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.19375 * frame.width, y: frame.minY + 0.60873 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.18854 * frame.width, y: frame.minY + 0.60350 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.16901 * frame.width, y: frame.minY + 0.61657 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17813 * frame.width, y: frame.minY + 0.60350 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17161 * frame.width, y: frame.minY + 0.60873 * frame.height))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.39181 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.27318 * frame.width, y: frame.minY + 0.46499 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.21849 * frame.width, y: frame.minY + 0.39181 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.24974 * frame.width, y: frame.minY + 0.42056 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.43624 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.35000 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.26146 * frame.width, y: frame.minY + 0.38397 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.22370 * frame.width, y: frame.minY + 0.35000 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.07917 * frame.width, y: frame.minY + 0.43624 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14297 * frame.width, y: frame.minY + 0.35000 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.10521 * frame.width, y: frame.minY + 0.38397 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.09349 * frame.width, y: frame.minY + 0.46499 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.39181 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.11693 * frame.width, y: frame.minY + 0.42056 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.14818 * frame.width, y: frame.minY + 0.39181 * frame.height))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPoint(x: frame.minX + 0.10911 * frame.width, y: frame.minY + 0.49635 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.12344 * frame.width, y: frame.minY + 0.52510 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.47806 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.49635 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.15990 * frame.width, y: frame.minY + 0.47806 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.24323 * frame.width, y: frame.minY + 0.52771 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.20677 * frame.width, y: frame.minY + 0.47806 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.22760 * frame.width, y: frame.minY + 0.49635 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.25755 * frame.width, y: frame.minY + 0.49896 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.43363 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.23932 * frame.width, y: frame.minY + 0.45715 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.21198 * frame.width, y: frame.minY + 0.43363 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.10911 * frame.width, y: frame.minY + 0.49635 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.15469 * frame.width, y: frame.minY + 0.43363 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.12734 * frame.width, y: frame.minY + 0.45715 * frame.height))
        bezier3Path.closePath()
        bezier3Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.55646 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.15339 * frame.width, y: frame.minY + 0.58520 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.56168 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16120 * frame.width, y: frame.minY + 0.56952 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17161 * frame.width, y: frame.minY + 0.56168 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.21328 * frame.width, y: frame.minY + 0.58520 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.19505 * frame.width, y: frame.minY + 0.56168 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.20547 * frame.width, y: frame.minY + 0.57214 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.22760 * frame.width, y: frame.minY + 0.55646 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.51987 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.21719 * frame.width, y: frame.minY + 0.53294 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.20026 * frame.width, y: frame.minY + 0.51987 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.55646 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16641 * frame.width, y: frame.minY + 0.51987 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.14948 * frame.width, y: frame.minY + 0.53294 * frame.height))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier4Path.fill()




        //// Group 3
        //// Page-1
        //// Bluetooth_Smart_Logo
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 20.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 25.23))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 41.01))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 35.97))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 19.63))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 16.46))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 25.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 4.29))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 20.13))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.97, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 41.05))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 56.89))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 36.02))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 44.72))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 41.55))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 45.13, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 35.93, y: group3.minY + 61.18), controlPoint2: CGPoint(x: group3.minX + 45.13, y: group3.minY + 54.83))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY), controlPoint1: CGPoint(x: group3.minX + 45.13, y: group3.minY + 6.35), controlPoint2: CGPoint(x: group3.minX + 35.93, y: group3.minY))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 9.22, y: group3.minY), controlPoint2: CGPoint(x: group3.minX, y: group3.minY + 6.35))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18), controlPoint1: CGPoint(x: group3.minX, y: group3.minY + 54.83), controlPoint2: CGPoint(x: group3.minX + 9.22, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        TestStyleKit.wirelessBlue.setFill()
        shapePath.fill()








        //// key.svg Group
        //// Group 4
        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 199.25, y: frame.minY + 16.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 190.5, y: frame.minY + 25.25), controlPoint1: CGPoint(x: frame.minX + 194.38, y: frame.minY + 16.5), controlPoint2: CGPoint(x: frame.minX + 190.5, y: frame.minY + 20.38))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 199.25, y: frame.minY + 34), controlPoint1: CGPoint(x: frame.minX + 190.5, y: frame.minY + 30.12), controlPoint2: CGPoint(x: frame.minX + 194.38, y: frame.minY + 34))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 208, y: frame.minY + 25.25), controlPoint1: CGPoint(x: frame.minX + 204.12, y: frame.minY + 34), controlPoint2: CGPoint(x: frame.minX + 208, y: frame.minY + 30.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 199.25, y: frame.minY + 16.5), controlPoint1: CGPoint(x: frame.minX + 208, y: frame.minY + 20.38), controlPoint2: CGPoint(x: frame.minX + 204.12, y: frame.minY + 16.5))
        bezier5Path.closePath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 197.38, y: frame.minY + 26.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 194.25, y: frame.minY + 23.38), controlPoint1: CGPoint(x: frame.minX + 195.62, y: frame.minY + 26.5), controlPoint2: CGPoint(x: frame.minX + 194.25, y: frame.minY + 25.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 197.38, y: frame.minY + 20.25), controlPoint1: CGPoint(x: frame.minX + 194.25, y: frame.minY + 21.62), controlPoint2: CGPoint(x: frame.minX + 195.62, y: frame.minY + 20.25))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 200.5, y: frame.minY + 23.38), controlPoint1: CGPoint(x: frame.minX + 199.12, y: frame.minY + 20.25), controlPoint2: CGPoint(x: frame.minX + 200.5, y: frame.minY + 21.62))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 197.38, y: frame.minY + 26.5), controlPoint1: CGPoint(x: frame.minX + 200.5, y: frame.minY + 25.12), controlPoint2: CGPoint(x: frame.minX + 199.12, y: frame.minY + 26.5))
        bezier5Path.closePath()
        bezier5Path.miterLimit = 4;

        black.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.moveToPoint(CGPoint(x: frame.minX + 206.75, y: frame.minY + 27.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 201.75, y: frame.minY + 32.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 204.25, y: frame.minY + 35.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 204.25, y: frame.minY + 35.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 206.75, y: frame.minY + 35.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 206.75, y: frame.minY + 37.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 206.75, y: frame.minY + 37.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 209.25, y: frame.minY + 37.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 209.25, y: frame.minY + 40.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 210.12, y: frame.minY + 41.12))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 211, y: frame.minY + 41.5), controlPoint1: CGPoint(x: frame.minX + 210.38, y: frame.minY + 41.38), controlPoint2: CGPoint(x: frame.minX + 210.62, y: frame.minY + 41.5))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 214.25, y: frame.minY + 41.5))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 215.5, y: frame.minY + 40.25), controlPoint1: CGPoint(x: frame.minX + 215, y: frame.minY + 41.5), controlPoint2: CGPoint(x: frame.minX + 215.5, y: frame.minY + 41))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 215.5, y: frame.minY + 37))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 215.12, y: frame.minY + 36.12), controlPoint1: CGPoint(x: frame.minX + 215.5, y: frame.minY + 36.63), controlPoint2: CGPoint(x: frame.minX + 215.38, y: frame.minY + 36.38))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 206.75, y: frame.minY + 27.75))
        bezier6Path.closePath()
        bezier6Path.miterLimit = 4;

        black.setFill()
        bezier6Path.fill()
    }

    public class func drawSingleLineText(frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRect(x: frame.minX + floor((frame.width - 240) / 2 + 0.5), y: frame.minY, width: 240, height: 21)
        let text2Path = UIBezierPath(rect: text2Rect)
        UIColor.redColor().setFill()
        text2Path.fill()
        let text2TextContent = NSString(string: "Left")
        let text2Style = NSMutableParagraphStyle()
        text2Style.alignment = .Left

        let text2FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "ComicSansMS", size: 17)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSize(width: text2Rect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect)
        text2TextContent.drawInRect(CGRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)


        //// Text 3 Drawing
        let text3Rect = CGRect(x: frame.minX + floor((frame.width - 240) / 2 + 0.5), y: frame.minY + 21, width: 240, height: 21)
        let text3Path = UIBezierPath(rect: text3Rect)
        UIColor.greenColor().setFill()
        text3Path.fill()
        let text3TextContent = NSString(string: "Center")
        let text3Style = NSMutableParagraphStyle()
        text3Style.alignment = .Center

        let text3FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "ComicSansMS", size: 17)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text3Style]

        let text3TextHeight: CGFloat = text3TextContent.boundingRectWithSize(CGSize(width: text3Rect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text3FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text3Rect)
        text3TextContent.drawInRect(CGRect(x: text3Rect.minX, y: text3Rect.minY + (text3Rect.height - text3TextHeight) / 2, width: text3Rect.width, height: text3TextHeight), withAttributes: text3FontAttributes)
        CGContextRestoreGState(context)


        //// Text 4 Drawing
        let text4Rect = CGRect(x: frame.minX + floor((frame.width - 240) / 2 + 0.5), y: frame.minY + 42, width: 240, height: 21)
        let text4Path = UIBezierPath(rect: text4Rect)
        UIColor.blueColor().setFill()
        text4Path.fill()
        let text4TextContent = NSString(string: "Right")
        let text4Style = NSMutableParagraphStyle()
        text4Style.alignment = .Right

        let text4FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "ComicSansMS", size: 17)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text4Style]

        let text4TextHeight: CGFloat = text4TextContent.boundingRectWithSize(CGSize(width: text4Rect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text4FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text4Rect)
        text4TextContent.drawInRect(CGRect(x: text4Rect.minX, y: text4Rect.minY + text4Rect.height - text4TextHeight, width: text4Rect.width, height: text4TextHeight), withAttributes: text4FontAttributes)
        CGContextRestoreGState(context)


        //// Text 5 Drawing
        let text5Rect = CGRect(x: frame.minX, y: frame.minY + 63, width: 240, height: 57)
        let text5Style = NSMutableParagraphStyle()
        text5Style.alignment = .Center

        let text5FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "AmericanTypewriter-Bold", size: 17)!, NSForegroundColorAttributeName: UIColor.blackColor(), NSParagraphStyleAttributeName: text5Style]

        "Upper alignment".drawInRect(text5Rect, withAttributes: text5FontAttributes)
    }

    public class func drawMultilineText() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let red = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)
        let green = UIColor(red: 0.320, green: 0.800, blue: 0.350, alpha: 1.000)

        //// Text 5 Drawing
        let text5Rect = CGRect(x: 0, y: 60, width: 240, height: 60)
        let text5Path = UIBezierPath(rect: text5Rect)
        green.setFill()
        text5Path.fill()
        let text5TextContent = NSString(string: "Center - Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
        let text5Style = NSMutableParagraphStyle()
        text5Style.alignment = .Center

        let text5FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "TimesNewRoman", size: 17)!, NSForegroundColorAttributeName: white, NSParagraphStyleAttributeName: text5Style]

        let text5TextHeight: CGFloat = text5TextContent.boundingRectWithSize(CGSize(width: text5Rect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text5FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text5Rect)
        text5TextContent.drawInRect(CGRect(x: text5Rect.minX, y: text5Rect.minY + (text5Rect.height - text5TextHeight) / 2, width: text5Rect.width, height: text5TextHeight), withAttributes: text5FontAttributes)
        CGContextRestoreGState(context)


        //// Text Drawing
        let textRect = CGRect(x: 0, y: 0, width: 240, height: 60)
        let textPath = UIBezierPath(rect: textRect)
        red.setFill()
        textPath.fill()
        let textTextContent = NSString(string: "Left - Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .Left

        let textFontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "TimesNewRoman", size: 17)!, NSForegroundColorAttributeName: white, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSize(width: textRect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect)
        textTextContent.drawInRect(CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)


        //// Text 2 Drawing
        let text2Rect = CGRect(x: 0, y: 120, width: 240, height: 60)
        let text2Path = UIBezierPath(rect: text2Rect)
        blue.setFill()
        text2Path.fill()
        let text2TextContent = NSString(string: "Right - Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
        let text2Style = NSMutableParagraphStyle()
        text2Style.alignment = .Right

        let text2FontAttributes: [String: Any] = [NSFontAttributeName: UIFont(name: "TimesNewRoman", size: 17)!, NSForegroundColorAttributeName: white, NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSize(width: text2Rect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect)
        text2TextContent.drawInRect(CGRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

}
